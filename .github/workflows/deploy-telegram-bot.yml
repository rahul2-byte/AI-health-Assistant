name: Deploy Telegram Bot

on:
  push:
    branches:
      - main  # or your preferred branch
  workflow_dispatch:  # allows manual trigger

env:
  FUNCTION_NAME: main
  RUNTIME: python3.12 
  HANDLER: index

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --target ./package -r requirements.txt
    
    - name: Create deployment package
      run: |
        cd package
        zip -r9 ../deployment.zip .  # Use -r9 for best compression
        cd ..
        cd app
        zip -r9 ../deployment.zip . -x '*.git*' '*__pycache__*' '*.DS_Store*' '*tests*'
        cd ..

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    
    - name: Upload deployment package to S3
      run: |
        aws s3 cp deployment.zip s3://telegram-bot-zip-file/deployment.zip

    - name: Deploy Lambda from S3
      run: |
        aws lambda update-function-code \
          --function-name ${{ env.FUNCTION_NAME }} \
          --s3-bucket telegram-bot-zip-file \
          --s3-key deployment.zip
    
    - name: Verify deployment
      run: |
        aws lambda wait function-updated --function-name ${{ env.FUNCTION_NAME }} --max-attempts 10
        echo "Lambda function updated successfully"
